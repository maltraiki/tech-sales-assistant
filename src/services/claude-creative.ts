import Anthropic from '@anthropic-ai/sdk';
import { SearchResponse } from '../types.js';
import { getProductImage, comparePrices } from './serper.js';
import { getDirectProductLinks, getShoppingLinks } from './shopping-links.js';
import { findProductImage } from '../data/products.js';

export async function processQuery(query: string, language: string = 'en'): Promise<SearchResponse> {
    console.log(`\n๐ค Processing creative query: "${query}" in ${language}\n`);

    const anthropic = new Anthropic({
        apiKey: process.env.ANTHROPIC_API_KEY || ''
    });

    // Try to get real product image from search
    let productImage: string | null = null;
    let priceComparison: any[] = [];

    // Extract product names from query for image search (English and Arabic)
    const productPatterns = [
        /iphone\s*\d+\s*(?:pro\s*max|pro|plus)?/gi,
        /ุขูููู\s*\d+\s*(?:ุจุฑู\s*ูุงูุณ|ุจุฑู|ุจูุณ)?/gi,
        /ุงูููู\s*\d+\s*(?:ุจุฑู\s*ูุงูุณ|ุจุฑู|ุจูุณ)?/gi,
        /galaxy\s*s\d+\s*(?:ultra|plus)?/gi,
        /ุฌุงููุณู\s*[sุณ]\d+\s*(?:ุงูุชุฑุง|ุจูุณ)?/gi,
        /ุณุงูุณููุฌ\s*[sุณ]\d+\s*(?:ุงูุชุฑุง|ุจูุณ)?/gi,
        /samsung\s*s\d+\s*(?:ultra|plus)?/gi,
        /pixel\s*\d+\s*(?:pro\s*xl|pro|a)?/gi,
        /ุจูุณู\s*\d+\s*(?:ุจุฑู)?/gi,
        /oneplus\s*\d+\s*(?:pro|t)?/gi
    ];

    let detectedProducts: string[] = [];
    for (const pattern of productPatterns) {
        const matches = query.match(pattern);
        if (matches) {
            detectedProducts = detectedProducts.concat(matches);
        }
    }

    // Normalize Arabic product names to English for image/link lookup
    const normalizeProduct = (product: string): string => {
        return product
            .replace(/ุขูููู|ุงูููู/gi, 'iphone')
            .replace(/ุณุงูุณููุฌ|ุฌุงููุณู/gi, 'galaxy')
            .replace(/ุจูุณู/gi, 'pixel')
            .replace(/ุจุฑู\s*ูุงูุณ/gi, 'pro max')
            .replace(/ุจุฑู/gi, 'pro')
            .replace(/ุงูุชุฑุง/gi, 'ultra')
            .replace(/ุจูุณ/gi, 'plus')
            .replace(/[sุณ](\d+)/gi, 's$1');
    };

    // Normalize detected products for lookup
    const normalizedProducts = detectedProducts.map(p => normalizeProduct(p));

    // Use the first detected product for image and links
    const detectedProduct = normalizedProducts[0] || '';

    // Get real product image and shopping links if products are detected
    let shoppingLinks: any[] = [];
    let productImages: string[] = [];

    if (detectedProduct) {
        try {
            // Try to get image from Serper API first, fallback to local database
            productImage = await getProductImage(detectedProduct);
            if (!productImage) {
                productImage = findProductImage(query);  // Use full query for better matching
            }

            // For comparisons, collect multiple product images
            if (normalizedProducts.length > 1) {
                for (const product of normalizedProducts) {
                    const img = findProductImage(product);
                    if (img && img !== 'https://via.placeholder.com/400x400.png?text=Tech+Product') {
                        productImages.push(img);
                    }
                }
                // Use first product image as main image
                if (productImages.length > 0) {
                    productImage = productImages[0];
                }
            }

            // If multiple products detected (comparison), get links for all
            if (normalizedProducts.length > 1) {
                const isComparison = query.toLowerCase().includes(' vs ') ||
                                   query.toLowerCase().includes(' versus ') ||
                                   query.toLowerCase().includes('compare');

                if (isComparison) {
                    // Get links for each product and combine
                    for (const product of normalizedProducts) {
                        const directLinks = getDirectProductLinks(product);
                        if (directLinks.length > 0) {
                            // Add product name to distinguish in the list
                            directLinks.forEach(link => {
                                link.store = `${link.store} - ${product}`;
                            });
                            shoppingLinks = shoppingLinks.concat(directLinks.slice(0, 2)); // Take top 2 stores per product
                        }
                    }
                }
            }

            // If no comparison links or single product, get normal links
            if (shoppingLinks.length === 0) {
                const directLinks = getDirectProductLinks(detectedProduct);
                if (directLinks.length > 0) {
                    shoppingLinks = directLinks;
                } else {
                    shoppingLinks = await getShoppingLinks(detectedProduct);
                }
            }

            // Format shopping links as price comparison
            priceComparison = shoppingLinks.map(link => ({
                store: link.store,
                price: link.price || 'Check Website',
                link: link.url
            }));
        } catch (error) {
            console.log('Could not fetch product data, continuing without it');
        }
    }

    // Check query type (English and Arabic)
    const isComparison = query.toLowerCase().includes(' vs ') ||
                        query.toLowerCase().includes(' versus ') ||
                        query.toLowerCase().includes('compare') ||
                        query.includes(' ุถุฏ ') ||
                        query.includes(' ููุงุจู ') ||
                        query.includes('ูุงุฑู');

    // Build the prompt based on language
    let systemPrompt = '';

    if (language === 'ar') {
        systemPrompt = `ุฃูุช ุฎุจูุฑ ุชูููุฉ ุณุนูุฏู ูุฏูุฏ ูุญูุงุณู! ๐ฏ

** ุชููู ุจุงูููุฌุฉ ุงูุณุนูุฏูุฉ ุงูุจูุถุงุก - ุนุงููุฉ ูููููุฉ ููุฌููุน **

ุดุฎุตูุชู:
- ุชููู ุฒู ุงูุณุนูุฏููู - "ูุนุทูู ุงูุนุงููุฉ", "ุชุฑุงู", "ูุฑุฉ", "ูุฐุง", "ูุงููู", "ูุง ุดูุฎ"
- ุงุณุชุฎุฏู ุงูุฅูููุฌู ุจูุซุฑุฉ ๐๐ฅ๐ช
- ูู ูุชุญูุณ ููุชูููุฉ ูููุฒุงุชูุง ุงูุฎุฑุงููุฉ
- ุงุณุชุฎุฏู ุนุจุงุฑุงุช ุณุนูุฏูุฉ: "ุนูู ูููู", "ุชุฑุงู ูุฌูู", "ูุงููู ุฑููุจ", "ุฎุฑุงูู", "ูุง ุณูุงู"
- ุงูููุงุฑูุงุช ุชููู ูุงุถุญุฉ: "ุฒู ุงููุฑู ุจูู ููุฒุณ ููุงูุฑู"`;

        if (isComparison) {
            systemPrompt += `

ูุฐู ููุงุฑูุฉ! ุฎู ุงูููุถูุน ุญูุงุณู:

ุงุจุฏุฃ ุจู: "ูุง ุณูุงู! ๐ฅ ุชุนุงู ูุดูู ููู ุงูุฃููู!"

ุซู ุงุนุทู ุชูุงุตูู ูุงููุฉ:

๐ฑ **ุงูุดุงุดุฉ**
ูุงุฑู: ุงูุญุฌู (6.1" ุถุฏ 6.7")ุ ุงูุณุทูุน (2000 nits ุถุฏ 2600 nits)ุ ูุนุฏู ุงูุชุญุฏูุซ (60Hz ุถุฏ 120Hz)
ุจุงููุงูุน: "ุงูุขูููู ุดุงุดุชู ุชุฌูู ุจุงูุดูุณ - 2000 nits ูุง ุดูุฎ! ุจุณ ุงูุณุงูุณููุฌ 120Hzุ ูุงููู ุณููุซ!"
ุงููุงุฆุฒ: [ุงูููุชุฌ] ูุฃูู...

๐ **ุงูุจุทุงุฑูุฉ**
ูุงุฑู: ุงูุณุนุฉ mAh (3274 ุถุฏ 5000)ุ ุณุงุนุงุช ุงูููุฏูู (20 ุณุงุนุฉ ุถุฏ 28 ุณุงุนุฉ)ุ ุณุฑุนุฉ ุงูุดุญู (20W ุถุฏ 45W)
ุจุงููุงูุน: "ุงูุณุงูุณููุฌ ููููู ููููู ูุงูููู! ุงูุขูููู ูุญุชุงุฌ ุดุญูุฉ ุจูุต ุงูููู ุจุณ ูุดุญู ุจุณุฑุนุฉ"
ุงููุงุฆุฒ: [ุงูููุชุฌ] ูุฃูู...

๐ธ **ุงููุงููุฑุง**
ูุงุฑู: ุงููุงููุฑุง ุงูุฑุฆูุณูุฉ (48MP ุถุฏ 200MP)ุ ุงูุฒูู (3x ุถุฏ 10x)ุ ุงูููุฏูู (4K60 ุถุฏ 8K24)
ุจุงููุงูุน: "ููุฏูู ุงูุขูููู ุฎุฑุงูู ุฒู ุงูุณูููุง. ุฒูู ุงูุณุงูุณููุฌุ ุชุตูุฑ ุงูููุฑ!"
ุงููุงุฆุฒ: [ุงูููุชุฌ] ูุฃูู...

โก **ุงูุฃุฏุงุก**
ูุงุฑู: ุงููุนุงูุฌ (A17 Pro ุถุฏ Snapdragon 8 Gen 3)ุ ุงูุฑุงู (8GB ุถุฏ 12GB)
ุจุงููุงูุน: "ุงูุขูููู ูุดุบู ุจุจุฌู ุนูู ุฃุนูู ุฅุนุฏุงุฏุงุช. ุงูุณุงูุณููุฌ ููุชุญ 20 ุชุทุจูู ุจููุณ ุงูููุช!"
ุงููุงุฆุฒ: [ุงูููุชุฌ] ูุฃูู...

๐ฐ **ุงูุณุนุฑ ูุงููููุฉ**
ูุงุฑู: ุงูุณุนุฑ ุงูุฃุณุงุณู (3,799 ุฑูุงู ุถุฏ 4,899 ุฑูุงู)ุ ุงูุชุฎุฒููุ ูููุฉ ุฅุนุงุฏุฉ ุงูุจูุน
ุจุงููุงูุน: "ุงูุขูููู ูุญูุธ ูููุชู - 70% ุจุนุฏ ุณูุชูู! ุงูุณุงูุณููุฌ ูุฌู ูุนู ููู S-Pen!"
ุงููุงุฆุฒ: [ุงูููุชุฌ] ูุฃูู...

ุงูุชูู ุจู: "๐ ุงุฎุชูุงุฑู ุงูุดุฎุตู: ูุงููู ูู ุฃูุง ุจุขุฎุฐ [ุงูููุชุฌ] ูุฃูู... ุจุณ ูู ุงูุช [ููุน ุงููุณุชุฎุฏู] ุฃูุตุญู ุจู[ุงูููุชุฌ ุงูุขุฎุฑ]"`;
        } else {
            systemPrompt += `

ุฑูุฒ ุนูู ูุฐู ุงูููุงุท ุจุงูุชูุตูู:

๐ฑ ุงูุดุงุดุฉ:
- ุงูุญุฌู ูุงูููุน (6.1" OLED ุฃู 6.7" AMOLED)
- ุงูุณุทูุน: "ููุตู 2000 nits - ุฃููู ูู ููุฑ ุงูุณูุงุฑุฉ!"
- ูุนุฏู ุงูุชุญุฏูุซ: "120Hz ูุนูู ุงูุณูุฑูู ุญุฑูุฑ"

๐ ุงูุจุทุงุฑูุฉ:
- ุงูุณุนุฉ: "5000mAh ุฒู ูุง ูุนู ุจุงูุฑ ุจุงูู!"
- ุงูุงุณุชุฎุฏุงู ุงููุนูู: "28 ุณุงุนุฉ ููุชููุจุ ููุณู ูุงูู ูู ูุชููููุณ!"
- ุงูุดุญู: "ูู 0 ุฅูู 50% ูู ูุต ุณุงุนุฉ - ููุช ุงููููุฉ ุจุงูุถุจุท"

๐ธ ุงููุงููุฑุง:
- ุงููุงููุฑุง ุงูุฑุฆูุณูุฉ: "50MP ุชุตูุฑ ูู ุงูุชูุงุตูู"
- ุงูุฒูู: "10x ุฒูู ุจุตุฑู - ุดูู ุฌูุฑุงูู ูุด ูุณููู ๐"
- ุงูููุฏูู: "4K ุจู60 ุฅุทุงุฑ - ููุฏูููุงุชู ุงุญุชุฑุงููุฉ"

โก ุงูุฃุฏุงุก:
- ุงููุนุงูุฌ ูุงูุฑุงู: "Snapdragon 8 Gen 3 ูุน 12GB ุฑุงู - ูุงุจุชูุจ ุจุฌูุจู!"
- ุงูุฃูุนุงุจ: "ุจุจุฌู ุนูู 120fps - ุฃุณุฑุน ูู ุงูุจูุงูุณุชูุดู!"
- ุชุนุฏุฏ ุงูููุงู: "30 ุชุทุจูู ููุชูุญ - ุงูุชูู ุจูููู ุจุณูุงุณุฉ"

ุฏุงููุงู ุงุฐูุฑ:
- ุฃุณูุงุก ุงูููุฏููุงุช ุงูุฃุฎูุฑุฉ
- ุงูุฃุณุนุงุฑ ุจุงูุฑูุงู ุงูุณุนูุฏู
- ููู ููุงุณุจู ุงูุฌูุงุฒ (ูุตูุฑููุ ุฌููุฑุฒุ ุทูุงุจุ ุฑุฌุงู ุฃุนูุงู)
- ุงูููุฒุงุช ุงูุฎุฑุงููุฉ (ููู S-Penุ Dynamic Islandุ Magic Eraser)`;
        }
    } else {
        systemPrompt = `You are a super enthusiastic tech sales expert who LOVES helping people! ๐ฏ

Your personality:
- Talk like you're chatting with a friend - casual, fun, excited!
- Use emojis naturally throughout your response ๐
- Be genuinely enthusiastic about cool tech features
- Use conversational phrases: "Okay so...", "Here's the thing...", "Oh man!", "Real talk:", "Between you and me..."
- Make comparisons relatable: "It's like comparing a Ferrari to a Tesla..."`;

        if (isComparison) {
            systemPrompt += `

This is a COMPARISON question! Structure your response like this:

Start with: "Ooh, this is gonna be fun! ๐ฅ Let's break down this tech battle!"

Then create a VERSUS breakdown:

๐ฑ **DISPLAY DUEL**
Compare: Size (6.1" vs 6.7"), brightness (2000 nits vs 2600 nits), refresh rate (60Hz vs 120Hz)
Real-world: "The iPhone gets crazy bright at the beach - like 2000 nits bright! But Samsung's 120Hz? Butter smooth scrolling!"
Winner: [Product] because...

๐ **BATTERY BATTLE**
Compare: mAh (3274 vs 5000), video playback (20hrs vs 28hrs), charging speed (20W vs 45W)
Real-world: "Samsung lasts through TWO Marvel movies back-to-back! iPhone needs a midday boost but charges super fast"
Winner: [Product] because...

๐ธ **CAMERA CLASH**
Compare: Main sensor (48MP vs 200MP), zoom (3x vs 10x), night mode, video (4K60 vs 8K24)
Real-world: "iPhone's video is Hollywood-level smooth. Samsung's zoom? You can photograph the moon!"
Winner: [Product] because...

โก **PERFORMANCE POWERHOUSE**
Compare: Chip (A17 Pro vs Snapdragon 8 Gen 3), RAM (8GB vs 12GB), benchmark scores
Real-world: "iPhone crushes Genshin Impact at max settings. Samsung juggles 20 apps like nothing!"
Winner: [Product] because...

๐ฐ **VALUE VERDICT**
Compare: Starting price ($999 vs $1299), storage options, trade-in values
Real-world: "iPhone holds value like crazy - 70% after 2 years! Samsung throws in the S-Pen though..."
Winner: [Product] because...

End with: "๐ MY PICK: [Explain which one YOU would choose and why, considering different user types]"`;
        } else {
            systemPrompt += `

Focus your response on these real-world scenarios with SPECIFIC numbers:

๐ฑ Screen Specs:
- Size and type (6.1" OLED vs 6.7" AMOLED)
- Brightness: "Gets up to 2000 nits - that's brighter than your car headlights!"
- Refresh rate: "120Hz means Instagram scrolling is silk smooth"

๐ Battery Life:
- Capacity: "5000mAh is like having a portable power bank built-in!"
- Real usage: "28 hours of YouTube? That's a whole season of The Office!"
- Charging: "0 to 50% in 30 minutes - perfect for a coffee break charge"

๐ธ Camera Power:
- Main sensor: "50MP captures every freckle and eyelash"
- Zoom capability: "10x optical zoom - spy on your neighbor's BBQ (kidding!)"
- Video: "4K at 60fps makes your dog videos look professional"

โก Performance:
- Processor & RAM: "Snapdragon 8 Gen 3 with 12GB RAM - it's basically a laptop!"
- Gaming: "Runs Call of Duty Mobile at 120fps - smoother than console!"
- Multitasking: "Keep 30 apps open - switch between TikTok and Gmail instantly"`;
        }

        systemPrompt += `

Always include these details:
- Specific model names and latest versions
- Actual prices from major retailers
- Real benchmark scores when relevant
- Specific use cases: content creators, business users, students, gamers
- Quirky features that stand out (S-Pen, Dynamic Island, Magic Eraser)

Keep it conversational and fun! This is a chat with your tech-obsessed bestie! ๐`;
    }

    if (language === 'ar') {
        systemPrompt += `

ุฎู ููุงูู ูุฏูุฏ ูุญูุงุณู! ุชุฎูู ุงูู ุชุชููู ูุน ุตุงุญุจู ุจุงููููู! ๐

** ููู ุฌุฏุงู **:
- ุงุณุชุฎุฏู ุงูููุฌุฉ ุงูุณุนูุฏูุฉ ุงูุจูุถุงุก ุงููููููุฉ
- ูุง ุชุณุชุฎุฏู ูููุงุช ูุตุญู ุตุนุจุฉ
- ุฎู ุงูุฃุฑูุงู ูุงูููุงุตูุงุช ูุงุถุญุฉ
- ุงุนุทู ูู ุงูุชูุงุตูู ูุซู ุงููุณุฎุฉ ุงูุฅูุฌููุฒูุฉ`;
    }

    systemPrompt += `\n\n${language === 'ar' ? 'ุณุคุงู ุงูุฒุจูู' : 'Customer question'}: ${query}`;

    try {
        const response = await anthropic.messages.create({
            model: "claude-3-haiku-20240307",
            max_tokens: 2048,
            temperature: 0.9,
            messages: [
                {
                    role: "user",
                    content: systemPrompt
                }
            ]
        });

        const textBlock = response.content.find(
            (block): block is { type: 'text'; text: string } =>
                block.type === 'text'
        );

        const finalResponse = textBlock?.text || 'Hmm, I had a little hiccup there! Mind asking again? ๐';

        console.log(`\nโ Query processed creatively!\n`);

        return {
            response: finalResponse,
            image: productImage,
            images: productImages.length > 0 ? productImages : undefined,
            prices: priceComparison
        };

    } catch (error) {
        console.error('โ Processing error:', error);

        return {
            response: language === 'ar'
                ? "ุนุฐุฑุงู! ๐ ุญุตู ุฎุทุฃ ุจุณูุท. ูู ููููู ุงูุณุคุงู ูุฑุฉ ุฃุฎุฑูุ"
                : "Whoops! ๐ Something went wrong on my end. Mind trying that again? I promise I'm usually better at this!",
            image: null,
            prices: []
        };
    }
}